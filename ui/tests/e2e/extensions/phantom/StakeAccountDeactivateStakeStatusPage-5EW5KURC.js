import{a as M}from"./chunk-BDMEYSBN.js";import{a as y}from"./chunk-2DLZSCTQ.js";import"./chunk-DGD53LCE.js";import{e as K,f as F,g as B}from"./chunk-SAN2LWG5.js";import"./chunk-JVLGNGOV.js";import"./chunk-3JMYJD4J.js";import"./chunk-FLIG3OXX.js";import"./chunk-IRT22BM2.js";import"./chunk-HRUBPS3N.js";import"./chunk-G46R4HGO.js";import{N as H,Y as _,ra as U}from"./chunk-Q2MU5Q7Q.js";import"./chunk-CCUQPG33.js";import"./chunk-IHXFHG2Y.js";import"./chunk-JAQNMSBC.js";import"./chunk-QCKHHJ5F.js";import{b as g}from"./chunk-QMDPT5WS.js";import"./chunk-Y6JOYO4T.js";import{db as A}from"./chunk-FABKKW5E.js";import{b as L}from"./chunk-JSLOSOZX.js";import"./chunk-GCJPSL4T.js";import"./chunk-RY7HN3SK.js";import"./chunk-R5GARSZH.js";import"./chunk-F24UB3BO.js";import{$a as E}from"./chunk-VOCOWPRG.js";import{cb as O,db as z,n as I,o as N}from"./chunk-F63TUCMM.js";import"./chunk-CJHTJRVG.js";import{U as u,Zb as w}from"./chunk-PJ6PRBE2.js";import"./chunk-DHKCVHRA.js";import{X as x,c as X,ya as f}from"./chunk-UTOBJRXZ.js";import"./chunk-3Q6WUW5S.js";import"./chunk-I5GRDOQ7.js";import"./chunk-3KRCODTN.js";import{f as W,h as T,n as P}from"./chunk-SVG5OEFH.js";T();P();var e=W(X());var Z=n=>{let i={stakePubkey:n.stakeAccountPubkey,stakeAuthorityPubkey:n.stakeAuthorityPubkey,onClose:n.onClose},{t}=x(),{deactivateStake:c,needsLedgerApproval:l,txHash:r,confirmationStatus:s,isError:k,error:d,onDeny:a}=$(i);if(l)return e.default.createElement(F,{ledgerAction:c,cancel:a});if(k){let o=d,S=o?.message,m=K(o),D=o?.message.includes(N),b=o?.message.includes(I);return m?e.default.createElement(B,{ledgerActionError:o,onRetryClick:c,onCancelClick:a}):D||b?e.default.createElement(M,{onCancelClick:a}):e.default.createElement(g,{icon:"error",title:t("stakeAccountDeactivateStakeUnstakingFailed"),onClose:a,iconSize:"large"},e.default.createElement(A,{wordBreak:"break-word",color:f.colors.legacy.textDiminished,size:16,lineHeight:20.8},S??t("stakeAccountDeactivateStakeUnstakingFailedDescription")),e.default.createElement(y,{txHash:r},t("stakeAccountDeactivateStakeViewTransaction")))}return s==="confirmed"||s==="finalized"?e.default.createElement(g,{icon:"success",title:t("stakeAccountDeactivateStakeSolUnstaked"),onClose:n.onClose,iconSize:"large"},e.default.createElement(A,{wordBreak:"break-word",color:f.colors.legacy.textDiminished,size:16,lineHeight:20.8},e.default.createElement(L,{i18nKey:"stakeAccountDeactivateStakeSolUnstakedDescriptionInterpolated"},"You will be able to withdraw your stake",e.default.createElement("br",null)," in the next couple of days once the stake account becomes inactive.")),e.default.createElement(y,{txHash:r},t("stakeAccountDeactivateStakeViewTransaction"))):e.default.createElement(g,{icon:"loading",title:t("stakeAccountDeactivateStakeUnstakingSol"),onClose:n.onClose,iconSize:"large"},e.default.createElement(A,{wordBreak:"break-word",color:f.colors.legacy.textDiminished,size:16,lineHeight:20.8},t("stakeAccountDeactivateStakeUnstakingSolDescription")),e.default.createElement(y,{txHash:r},t("stakeAccountDeactivateStakeViewTransaction")))},he=Z,$=({onClose:n,...i})=>{let{data:t,isSuccess:c}=E(),{accountIdentifier:l,isLedgerAccount:r,solanaChainAddress:s,solanaPublicKey:k,connection:d,networkID:a}=(0,e.useMemo)(()=>{let Y=t?.identifier??"",p=(t?.addresses??[]).find(J=>w.isSolanaNetworkID(J.networkID)),j=new u.PublicKey(p?.address??""),q=t?.type==="ledger",C=p?.networkID,G=O(z(C));return{accountIdentifier:Y,isLedgerAccount:q,solanaChainAddress:p,solanaPublicKey:j,connection:G,networkID:C}},[t]),o=U(d),S=(0,e.useCallback)(()=>{o.mutate({...i,accountIdentifier:l,senderAddress:s,stakePubkey:new u.PublicKey(i.stakePubkey),stakeAuthorityPubkey:new u.PublicKey(i.stakeAuthorityPubkey),authorizedPubkey:k})},[l,i,o,s,k]),m=H(),D=(0,e.useCallback)(()=>{m.denied({chainType:"solana",chainName:"solana",networkId:w.getSolanaNetworkIDValue(a),type:"undelegate"}),n()},[a,n,m]);(0,e.useEffect)(()=>{if(c){if(!t||!s)throw new Error("Selected account undefined when trying to perform stake transaction.");r||S()}},[c]);let v=o.data?.id,h=_(d,2e3,v),V=r&&(o.isIdle||o.isPending),Q=h.data?.value?.confirmationStatus;return{deactivateStake:S,onDeny:D,needsLedgerApproval:V,txHash:v,confirmationStatus:Q,isError:o.isError??h.isError,error:o.error??h.error}};export{Z as StakeAccountDeactivateStakeStatusPage,he as default};
//# sourceMappingURL=StakeAccountDeactivateStakeStatusPage-5EW5KURC.js.map
