import{X as _}from"./chunk-BY77CZR3.js";import{P as B,Q as D,U as P,la as v,x as N}from"./chunk-IHXFHG2Y.js";import{b as k,ta as G,x as q}from"./chunk-QCKHHJ5F.js";import{$a as S,Rb as A,k as R}from"./chunk-VOCOWPRG.js";import{Ac as M,Bc as U,Hb as w,Ib as F,_a as I}from"./chunk-F63TUCMM.js";import{Pc as h,Rd as b,Zb as g,_c as x,ca as y,ld as C,od as E}from"./chunk-PJ6PRBE2.js";import{h as s,n as a}from"./chunk-SVG5OEFH.js";s();a();var O="fungible-transfer-tx",H=b({seconds:30});function en(n){let t=n?.fungibleKey,{fungible:e}=v({key:t,splTokenAccount:n?.splTokenAccount}),o=P(n?.sendFormValues?.recipient,e?.data.chain.id)??"",c=n?.sendSessionId??"",{chain:d,walletAddress:r}=e?.data??{},{data:m}=A({address:r,networkID:d?.id}),{data:p}=D(m),{data:l}=N({networkID:d?.id,enableFallback:!0}),i=L(d?.id,l,p,m),f=i?.sendContextRequired?i.sendContext:void 0,u=n?.sendFormValues;return E({staleTime:H,enabled:!!e&&!!n&&!!i,queryKey:q.transferTransaction({fungibleKey:t,fungibleSendFormValues:u,sendSessionId:c,sendContext:f}),async queryFn(){if(!e||!u||!i)throw new Error("Missing required data to construct fungible transfer transaction");try{return await G(e,{...u,recipient:o},f)}catch(T){if(y(T)){let V=T.response?.status;k(T,V,O)}}throw new Error("Failed to create transfer transaction")}})}function L(n,t,e,o){if(n)return g.isBitcoinNetworkID(n)?!t||!e||!o?void 0:{sendContextRequired:!0,sendContext:{transactionSpeedsToUnitCost:t,utxoState:e,chainAddress:o}}:{sendContextRequired:!1}}s();a();s();a();var Q=()=>{let{setRetryArgs:n}=_();return t=>{if(t instanceof F){let{successfulTxIds:e}=t,[o,c]=e;n({type:"BRC20",commitTxId:o,revealTxId:c})}}};function Rn(){let n=x(),{data:t}=S({select:r=>r.identifier}),e=Q(),o=B(),c=R();return C({mutationFn:async({multichainTransaction:r,pendingTransactionInput:m,senderAddress:p,gasEstimation:l})=>{if(!t)throw new Error("No account identifier found");let{networkID:i}=r,f=await I.get(i).onBeforeSend({multichainTransaction:r,gasEstimation:l}),u=await U({accountIdentifier:t,accountSigner:c,multichainTransaction:f,networkID:i,pendingTransactionInput:m,senderAddress:p,storage:n,utxoManager:o});return M(i,u)},onError(r){r instanceof Error&&(h.captureError(r,"fungibles"),r instanceof w&&e(r))}})}export{en as a,Rn as b};
//# sourceMappingURL=chunk-77HJ74OI.js.map
